import { useEffect, useState } from "react";
import { getProducts } from "../helpers/getProducts";

export const useFetchProducts = (): FetchProductsResult => {
  const [isLoading, setIsLoading] = useState(true);
  const [products, setProducts] = useState<Product[]>([]);
  const [error, setError] = useState<string | undefined>();

  const getProductsData = async () => {
    try {
      const data = await getProducts();
      setProducts(data.products);
    } catch (error) {
      console.error('Error al obtener los productos', error);
      setError('Error al obtener los productos');
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    getProductsData();
  }, []);

  return {
    products,
    isLoading,
    error
  };
};

// Generated by https://quicktype.io

export interface FetchProductsResult {
  products: Product[];
  isLoading: boolean;
  error?: string;
}

export interface Product {
  id:                  number;
  name:                string;
  description:         string;
  brand:               string;
  quantity:            number;
  unit:                string;
  price:               number;
  cost:                number;
  stock:               null;
  reorder_limit:       null;
  product_category_id: number;
  created_at:          string;
  updated_at:          string;
  category_name:       string;
  category:            Category;
}

export interface Category {
  id:                 number;
  name:               string;
  parent_category_id: null;
  created_at:         string;
  updated_at:         string;
}
